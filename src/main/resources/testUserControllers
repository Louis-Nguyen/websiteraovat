package com.website.raovat.controllers;

import java.util.ArrayList;
import java.util.List;
import java.util.Set;

import javax.transaction.Transactional;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.website.raovat.entity.sanpham;
import com.website.raovat.entity.user;
import com.website.raovat.model.UserModel;
import com.website.raovat.services.UserServices;



@RestController
@RequestMapping("user")
public class UserController {
	@Autowired
	private UserServices userService;
	@GetMapping("getall")
	public List<String> GetUsers() {
		List<user> list = new ArrayList<user>();
		list  = userService.getAll();
		List<String> listAccount  = new ArrayList<String>();
		for(user User : list) {
			listAccount.add(User.getAccount());
		}
		return listAccount;
	}
	@PostMapping("login")
	public user Login(@RequestParam String account, @RequestParam String password) {
		
		System.out.println("account: " +account +"|" + "password: " + password);
		if(userService.KiemTraDangNhap(account, password)!= null) {
			System.out.println("Dang nhap thanh cong!");
			System.out.println("Name: "+ userService.KiemTraDangNhap(account, password).getHoTen());
		}
		else {
			System.out.println("Dang nhap that bai!");
		}
		return userService.KiemTraDangNhap(account, password);
	}
	@PostMapping("insert")
	public user insert(@ModelAttribute UserModel User) {
		String hoTen = User.getName();
		String  diaChi = "";
		Boolean gioiTinh = true;
		String soDT ="";
		String image="";
		String age ="";
		String account = User.getAccount();
		String password = User.getPassword();
		int cash  = 0;
		String phanquyen = User.getPhanquyen();
		Set<sanpham> SanPham = null;
		user NewUser = new user(phanquyen,hoTen,diaChi,gioiTinh,soDT,image,age,account,password,cash,SanPham);
		return userService.insert(NewUser);
	}

	@GetMapping("{account}")
	public user findByAccount(@PathVariable("account") String account) {
		System.out.println("acc :" + account);
		user User = userService.findByAccount(account);
		Set<sanpham> SanPham = null;
		User.setSanPham(SanPham);
		return User;
	}

	@PutMapping("{account}")
	public user replaceUser(@PathVariable String account) {
		Set<sanpham> SanPham = null;
		user User = userService.findByAccount(account);
		User.setCash(5000);
		User.setSanPham(SanPham);
		if(User != null) {
			System.out.println("update success!");
			System.out.println(User.getAccount()+ " = " +User.getHoTen());
			try {
				return userService.update(User);
			} catch (Exception e) {
				// TODO: handle exception
				System.out.println("error in update success");
				return null;
			}
		
		}
		else {
			System.out.println("update fail!");
			return null;
			
		}
	}

	@DeleteMapping("/{account}")
	public user deleteUser(@PathVariable String account) {
		user User = userService.findByAccount(account);
		if(User != null) {
			return userService.delete(User);
		}
		else {
			return null;
		}
		
		
	}
}
